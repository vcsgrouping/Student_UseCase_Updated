/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.student_usecase.studentportal_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * AcademicSubjects generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ACADEMIC_SUBJECTS`")
@IdClass(AcademicSubjectsId.class)
public class AcademicSubjects implements Serializable {

    private String subjectName;
    private Date academicYear;
    private String subjectTeacher;
    private String standard;

    @Id
    @Column(name = "`SUBJECT_NAME`", nullable = false, length = 255)
    public String getSubjectName() {
        return this.subjectName;
    }

    public void setSubjectName(String subjectName) {
        this.subjectName = subjectName;
    }

    @Id
    @Column(name = "`ACADEMIC_YEAR`", nullable = false)
    public Date getAcademicYear() {
        return this.academicYear;
    }

    public void setAcademicYear(Date academicYear) {
        this.academicYear = academicYear;
    }

    @Id
    @Column(name = "`SUBJECT_TEACHER`", nullable = false, length = 255)
    public String getSubjectTeacher() {
        return this.subjectTeacher;
    }

    public void setSubjectTeacher(String subjectTeacher) {
        this.subjectTeacher = subjectTeacher;
    }

    @Id
    @Column(name = "`STANDARD`", nullable = false, length = 255)
    public String getStandard() {
        return this.standard;
    }

    public void setStandard(String standard) {
        this.standard = standard;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AcademicSubjects)) return false;
        final AcademicSubjects academicSubjects = (AcademicSubjects) o;
        return Objects.equals(getSubjectName(), academicSubjects.getSubjectName()) &&
                Objects.equals(getAcademicYear(), academicSubjects.getAcademicYear()) &&
                Objects.equals(getSubjectTeacher(), academicSubjects.getSubjectTeacher()) &&
                Objects.equals(getStandard(), academicSubjects.getStandard());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSubjectName(),
                getAcademicYear(),
                getSubjectTeacher(),
                getStandard());
    }
}